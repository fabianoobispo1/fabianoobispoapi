generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(uuid())
  name          String
  email         String    @unique
  created_at    DateTime  @default(now())
  password_hash String
  role          Role      @default(MEMBER)
  checkIns      CheckIn[]

  @@map("users")
}

model CheckIn {
  id           String    @id @default(uuid())
  created_at   DateTime  @default(now())
  validated_at DateTime?
  gym_id       String
  user_id      String
  gyn          Gym       @relation(fields: [gym_id], references: [id])
  user         User      @relation(fields: [user_id], references: [id])

  @@map("check_ins")
}

model Gym {
  id          String    @id @default(uuid())
  title       String
  description String?
  phone       String?
  latitude    Decimal
  longitude   Decimal
  checkIns    CheckIn[]

  @@map("gyms")
}

model FaUsuario {
  id              String        @id @default(uuid())
  nome            String
  email           String        @unique
  password_hash   String
  administrador   Boolean       @default(false)
  data_nascimento DateTime
  created_at      DateTime      @default(now())
  FaTransacao     FaTransacao[]

  @@map("fa_usuario")
}

model FaTransacao {
  id         String   @id @default(uuid())
  titulo     String
  valor      Float
  tipo       String
  vencimento DateTime
  updated_at DateTime @default(now())
  created_at DateTime @default(now())

  faUsuario    FaUsuario @relation(fields: [faUsuario_id], references: [id])
  faUsuario_id String

  @@map("fa_transacao")
}

model Todos {
  id          String   @id @default(uuid())
  text        String
  isCompleted Boolean  @default(false)
  created_at  DateTime @default(now())
  updatedAt   DateTime @default(now())

  @@map("todos")
}

enum Role {
  ADMIN
  MEMBER
}
